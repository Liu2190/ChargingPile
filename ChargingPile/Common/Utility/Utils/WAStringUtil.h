/*! @header WAStringUtil.h @abstract 基础字符串类处理类  此类划分为:字符串,数组。 @author Berry yu  @version 0.5 2012/03/28 Creation  @Copyright 2012 Ufida. All rights reserved. */#import <Foundation/Foundation.h>@interface CWAStringUtil : NSObject {}/*! @method @abstract 新建字符串。 @discussion   @param aString  需要新建的字符串 @result 返回结果不需要释放 @ */+ (NSString*)getWAString:(NSString*)aString;/*! @method @abstract 比较两个c字符串是否相同。 @discussion   @param cstr1,cstr2 为char的字符串  @result 相同，返回真；不相同，返回假 */+ (BOOL)compareCString:(char*)aCstr1 Cstr2:(char*)aCstr2;/*! @method @abstract 比较两字符内容是否相同。 @discussion   @param aStr1,aStr2 为NSString的字符串  @result 相同，返回真；不相同，返回假 */+ (BOOL)compareStringIfOrderedSame:(NSString *)aStr1 Str2:(NSString *)aStr2;/*! @method @abstract 判断两对象值的大小。 @discussion  按字母顺序进行比较，astring02大于astring01为真 @param aStr1,aStr2 为NSString的字符串  @result astring02大于astring01为真；反之返回假 */+ (BOOL)compareStringIfOrderedAscending:(NSString *)aStr1 Str2:(NSString *)aStr2;/*! @method @abstract 判断两对象值的大小。 @discussion  不考虑大 小写比较字符串 判断两对象值的大小(按字母顺序进行比较，astring02小于astring01为真 @param aStr1,aStr2 为NSString的字符串  @result 按字母顺序进行比较，astring02小于astring01为真；反之返回假 */+ (BOOL)compareStringIfOrderedSameCaseInsensitive:(NSString *)aStr1 Str2:(NSString *)aStr2;/*! @method @abstract 把字符串变成大写。 @discussion   @param aStr为NSString的字符串  @result 返回结果不需要释放   */+ (NSString*)uppercaseWAString:(NSString *)aStr;/*! @method @abstract 把字符串变成小写。 @discussion   @param aStr为NSString的字符串  @result 返回结果不需要释放   */+ (NSString*)lowercaseWAString:(NSString *)aStr;/*! @method @abstract 把字符串的首字母大写。 @discussion   @param aStr为NSString的字符串  @result 返回结果不需要释放   */+ (NSString*)capitalizedWAString:(NSString *)aStr;/*! @method @abstract 字符串长度超过８截取。 @discussion 固定长度的截取 @param aTextString为NSString的字符串  @param aMaxLength为NSString的字符串  @result 返回结果不需要释放   */+ (NSString *)calculateStringAndCutoutString :(NSString *)aTextString                   withMaxLen:(NSInteger)aMaxLength;/*! @method @abstract 获取取字符串长度。 @discussion  @param 参数aTextString为NSString的字符串  @result 返回结果不需要释放     */+ (NSUInteger )calculateStringLength :(NSString *)aTextString;/*! @method @abstract 截取起始到所给index长度的字符串。 @discussion  @param 参数index为NSInteger  为所要截取的长度  @param 参数aTextString为NSString的字符串  @result 返回结果不需要释放 为截取后的字符串   */+ (NSString*)getStringToIndex:(NSInteger)aIndex fromString:(NSString *)aFromString;/*! @method @abstract index开始截取剩余的字符串。 @discussion  @param 参数index为NSInteger  字符串截取的起始位置  @param 参数aTextString为NSString的字符串  @result 返回结果不需要释放 为截取后的字符串   */+ (NSString*)getStringFromIndex:(NSInteger)aIndex fromString:(NSString *)aFromString;/*! @method @abstract    按照所给出的位置，长度，任意地从字符串中截取子串。 @discussion  从index1截取到index2 @param       参数index 截取的起始位置  @param       参数index2 截取的终止位置。 @param       参数aTextString为NSString的字符串  @result      返回结果不需要释放 为截取后的字符串   */+ (NSString*)getStringFromIndex:(NSInteger)aIndex1 Index2:(NSInteger)aIndex2 fromString:(NSString *)aFromString;/*! @method @abstract    在已有字符串后面在所指定的位置中插入给出的字符串。 @discussion   @param       参数index 指定的位置  @param       参数fromString 为原字符串。 @result      返回结果不需要释放 为插入值后的字符串   */+ (NSString*)insertString:(NSInteger)aIndex  digString:(NSString *)aDigstring                           fromString:(NSString *)aFromString;/*! @method @abstract    MD5字符串操作。 @discussion  将NSString类型的字符串进行MD5加密 @param       参数index 指定的位置  @param       参数fromString 为原字符串。 @result      返回结果不需要释放 为MD5加密后的字符串   */+ (NSString *)md5ToString:(NSString *)aFromString;/*! @method @abstract    MD5字符串操作。 @discussion  将NSData进行MD5加密 @param       参数index 指定的位置  @param       参数fromString 为原字符串。 @result      返回结果不需要释放 为MD5加密后的字符串   */+ (NSString *)md5ToData:(NSData *)aData;//字符类型转换// NSData 与 NSString/*! @method @abstract    NSData类型转换为NSString。 @discussion   @param       参数aData 为需要转换的NSData。 @result      返回结果不需要释放 为转换后的字符串   */+ (NSString *)dateToString:(NSData *)aData;/*! @method @abstract    NSString类型转换为NSData。 @discussion    @param       参数aFromString 为需要转换的NSString。 @result      返回结果不需要释放 为转换后的NSData   */+ (NSData *)stringToData:(NSString *)aFromString;/*! @method @abstract    NSData类型转换为Byte。 @discussion    @param       参数aFromString 为需要转换的NSString。 @result      返回结果不需要释放 为转换后的NSData   */+ (Byte *)dataToByte:(NSData *)aData;/*! @method @abstract    获取字符串的UTF8编码。 @discussion    @param       参数aEnCodeStr 为需要转换的NSString。 @result      返回结果不需要释放为系统autorelease 为转换后的UTF8字符串   */+ (NSString *)EncodeUTF8Str:(NSString *)aEnCodeStr;/*! @method @abstract    获取字符串的GB2312编码。 @discussion    @param       参数aFromString 为需要转换的NSString。 @result      返回结果不需要释放为系统autorelease 为转换后的GB2312字符串  */+ (NSString *) EncodeGB2312Str:(NSString *) aEnCodeStr;/*! @method @abstract    将16进制数据转化成Byte 数组。 @discussion    @param       参数aFromString 为16进制字符串。 @result      返回结果不需要释放为系统autorelease 为转换后的GB2312字符串  */+ (Byte *)string16ToByte:(NSString *)aFromString;/*! @method @abstract    删除数组中指定索引处对象 @discussion   @param       参数index 指定的位置  @param       参数fromString 为原字符串。 @result      返回结果不需要释放 为MD5加密后的字符串   *///删除数组中指定索引处对象+ (NSMutableArray *)removeObjectAtIndex:(unsigned) aIndex fromString:(NSArray *)aFromString;/*! @method @abstract    url校验 @discussion   @param    aURl   需要校验的url。 @result      校验通过，返回ture,否则返回false */+ (BOOL) validateURL:(NSString *)aURl;/*! @method @abstract    获取字符串在某字体下的宽度 @discussion   @param    aString  需要计算的字符窜。 @param    aFont   使用的字体。 @result      返回该字体下界面上的宽度 */+ (CGFloat) getWidthOfString:(NSString *)aString withFont:(UIFont *)aFont;/*! @method @abstract    截取字符窜某字体下，一定宽度的子字符窜 @discussion   @param    aString  需要截取字符窜。 @param    aFont   使用的字体。 @param    aWidth  宽度。 @result      返回子窜 */+ (NSString *)getSubStringOfString:(NSString *)aString                            withFont:(UIFont *)aFont                         withWidth:(CGFloat)aWidth;/*! @method @abstract    校验是否为数字 @discussion  如果含有非数字返回nil @param    number  需要校验字符窜 @result      返回子窜 */+(NSMutableString *)filteNumber:(NSString *) number;/*! @mthod @abstract 根据给定的分隔符分隔给定的字符串 @discussion           函数根据给定的分隔符号，来分隔字符串，           返回NSMutableArray,其中每一个元素为分隔好的字符串           如果aStirng中不存在分隔符，则返回Array只有一个元素，就是           aString           如果传入的aString ,aSeparator有错，比如类型不对，           则返回nil @param    aString:待分隔的字符串 @author   yangrui @param    aSeparator:分隔符号 */+(NSMutableArray*)divideString:(NSString*)aString                  WithSeparator:(NSString*)aSeparator;@end